{"version":3,"sources":["../src/ReactTextCollapse.js"],"names":["ReactTextCollapse","props","toggleAction","setState","collapse","state","options","collapseText","expandText","textStyle","float","minHeight","maxHeight","children","h","display","overflow","height","renderHelperText","propTypes","node","isRequired","object"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;;;;;IAEqBA,iB;;;AAMnB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACXA,KADW;;AAAA,UAoBnBC,YApBmB,GAoBJ,YAAM;AACnB,YAAKC,QAAL,CAAc;AAAA,eAAU,EAAEC,UAAU,CAACC,MAAMD,QAAnB,EAAV;AAAA,OAAd;AACD,KAtBkB;;AAAA,QAGEA,QAHF,GAGiB,MAAKH,KAHtB,CAGTK,OAHS,CAGEF,QAHF;;AAIjB,UAAKC,KAAL,GAAa;AACXD,gBAAUA,WAAWA,QAAX,GAAsB;AADrB,KAAb;AAJiB;AAOlB;;;;uCAEkB;AAAA,2BAC4C,KAAKH,KADjD,CACTK,OADS;AAAA,UACEC,YADF,kBACEA,YADF;AAAA,UACgBC,UADhB,kBACgBA,UADhB;AAAA,UAC4BC,SAD5B,kBAC4BA,SAD5B;AAAA,UAETL,QAFS,GAEI,KAAKC,KAFT,CAETD,QAFS;;;AAIjB,UAAIA,QAAJ,EAAc;AACZ,eAAO;AAAA;AAAA,YAAK,kBAASM,aAAT,IAA2BD,SAA3B,CAAL;AAA8CF;AAA9C,SAAP;AACD;;AAED,aAAO;AAAA;AAAA,UAAK,kBAASG,aAAT,IAA2BD,SAA3B,CAAL;AAA8CD;AAA9C,OAAP;AACD;;;6BAMQ;AAAA;;AAAA,mBACiD,KAAKP,KADtD;AAAA,mCACCK,OADD;AAAA,UACYK,SADZ,mBACYA,SADZ;AAAA,UACuBC,SADvB,mBACuBA,SADvB;AAAA,UACoCC,QADpC,UACoCA,QADpC;AAAA,UAECT,QAFD,GAEc,KAAKC,KAFnB,CAECD,QAFD;;AAGP,aACE;AAAA;AAAA;AACE,wBAAc,EAAEU,GAAG,CAAL,EADhB;AAEE,iBAAO,EAAEA,GAAG,yBAAOV,WAAWO,SAAX,GAAuBC,SAA9B,CAAL,EAFT;AAII;AAAA,cAAGE,CAAH,QAAGA,CAAH;AAAA,iBACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE,uBAAO;AACLC,kCADK;AAELC,oCAFK;AAGLC,0BAAQ,KAAGH,CAAH,GAAS;AAHZ,iBADT;AAMGD;AANH,aADF;AASE;AAAA;AAAA,gBAAK,SAAS,OAAKX,YAAnB;AAAkC,qBAAKgB,gBAAL;AAAlC;AATF,WADF;AAAA;AAJJ,OADF;AAqBD;;;;;;AAtDkBlB,iB,CACZmB,S,GAAY;AACjBN,YAAU,oBAAUO,IAAV,CAAeC,UADR;AAEjBf,WAAS,oBAAUgB,MAAV,CAAiBD;AAFT,C;kBADArB,iB","file":"ReactTextCollapse.js","sourcesContent":["import React, { Component } from 'react';\nimport { Motion, spring } from \"react-motion\";\nimport PropTypes from 'prop-types';\n\nexport default class ReactTextCollapse extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    options: PropTypes.object.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { options: { collapse } } = this.props;\n    this.state = {\n      collapse: collapse ? collapse : true\n    }\n  }\n\n  renderHelperText() {\n    const { options: { collapseText, expandText, textStyle } } = this.props;\n    const { collapse } = this.state;\n    \n    if (collapse) {\n      return <div style={{ float: `left`, ...textStyle }}>{collapseText}</div>\n    } \n    \n    return <div style={{ float: `left`, ...textStyle }}>{expandText}</div>    \n  }\n\n  toggleAction = () => {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n\n  render() {\n    const { options: { minHeight, maxHeight }, children } = this.props;\n    const { collapse } = this.state;\n    return (\n      <Motion\n        defaultStyle={{ h: 0 }}\n        style={{ h: spring(collapse ? minHeight : maxHeight) }}>\n        {\n          ({ h }) => (\n            <div>\n              <div\n                style={{\n                  display: `block`,\n                  overflow: `hidden`,\n                  height: `${h}` + 'px'\n                }}>\n                {children}\n              </div>\n              <div onClick={this.toggleAction}>{this.renderHelperText()}</div>\n            </div>\n          )\n        }\n      </Motion>\n    );\n  }\n}\n"]}